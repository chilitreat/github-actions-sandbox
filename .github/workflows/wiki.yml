on:
  pull_request:
    types: [opened, reopened, ready_for_review]
  issue_comment:
jobs:
  pr_agent_job:
    if: ${{ github.event.sender.type != 'Bot' }}
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: write
    name: Run pr agent
    steps:
      - name: Check out main repo
        uses: actions/checkout@v3
      - name: Check out wiki repo
        uses: actions/checkout@v3
        with:
          repository: "${{ github.repository }}.wiki"
          path: .wiki
      - name: Set up Wiki Info
        working-directory: .wiki
        id: wiki_info
        run: |
          pwd
          ls -al
          var_name="REVIEW_PROMPT"
          cat ./pr‐agent‐review‐prompt.md
          prompt=$(cat ./pr‐agent‐review‐prompt.md)
          echo "${var_name}<<EOF" >> $GITHUB_ENV
          echo $prompt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Update wiki pages
        run: echo -e "# Hello\n\n$(date)" > .wiki/hello.md
      - name: Stage and count changes
        working-directory: .wiki
        id: staging
        run: |
          git add .
          echo "NUM_OF_STAGED=$(git diff --staged --name-only | wc -l)" >> $GITHUB_OUTPUT          

      - name: Commit wiki pages
        working-directory: .wiki
        if: steps.staging.outputs.NUM_OF_STAGED > 0
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git commit -m "${GITHUB_WORKFLOW}"
          git push          
      # - name: PR Agent action step
      #   id: pragent
      #   uses: Codium-ai/pr-agent@main
      #   env:
      #     OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     # PR_AGENT settings (/review)
      #     PR_REVIEWER.extra_instructions: |
      #       ${{env.REVIEW_PROMPT}}
